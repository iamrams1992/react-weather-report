{"version":3,"sources":["components/App.js","index.js"],"names":["App","useState","isLoading","setIsLoading","isSearchShowing","setIsSearchShowing","id","name","lat","long","selectedLocation","setSelectedLocation","resultData","setResultData","hasError","setHasError","useReducer","state","newState","searchInput","setSearchInput","getDataFromAPI","a","axios","get","headers","catch","error","console","log","response","data","mutateData","time","convertTimestampToDate","currently","icon","toUpperCase","split","join","summary","temperature","toFixed","dewPoint","humidity","windSpeed","daily","map","thing","day","temperatureMax","temperatureMin","selectLocation","locate","closeSearchbar","handleInput","evt","target","newValue","value","parseFloat","timestamp","mode","dayNames","date","Date","dateString","getDay","getDate","getMonth","getFullYear","toLocaleString","SearchBar","dailyList","ContentRender","navList","index","className","onClick","xmlns","width","height","viewBox","points","type","placeholder","onChange","alert","d","style","fill","stroke","strokeMiterlimit","strokeWidth","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","undefined","color","animate","size","resizeClear","display","justifyContent","alignItems","src","process","alt","fontSize","flexDirection","useEffect","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","rel","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c09fdb4.chunk.js","sourcesContent":["// Library\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport Skycons from \"react-skycons\";\nimport axios from \"axios\";\n// Style\nimport \"./App.css\";\n// Components\n\nconst App = () => {\n  // STATE\n  // --- flag\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSearchShowing, setIsSearchShowing] = useState(false);\n  const [selectedLocation, setSelectedLocation] = useState({\n    id: \"\",\n    name: \"\",\n    lat: \"\",\n    long: \"\",\n  });\n  // --- data\n  const [resultData, setResultData] = useState(\"\");\n  const [hasError, setHasError] = useState(\"\");\n  // ---- REDUCER for Multiple Input\n  const [searchInput, setSearchInput] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    {\n      lat: \"\",\n      long: \"\",\n    }\n  );\n  // VARIABLE\n  let popularList = [\n    {\n      id: \"new_york\",\n      name: \"New York\",\n      lat: 40.73061,\n      long: -73.935242,\n    },\n    {\n      id: \"london\",\n      name: \"London\",\n      lat: 51.509865,\n      long: -0.118092,\n    },\n    {\n      id: \"paris\",\n      name: \"Paris\",\n      lat: 48.864716,\n      long: 2.349014,\n    },\n    {\n      id: \"tokyo\",\n      name: \"Tokyo\",\n      lat: 35.652832,\n      long: 139.839478,\n    },\n    {\n      id: \"seoul\",\n      name: \"Seoul\",\n      lat: 37.5326,\n      long: 127.024612,\n    },\n    {\n      id: \"bangkok\",\n      name: \"Bangkok\",\n      lat: 13.736717,\n      long: 100.523186,\n    },\n  ];\n\n  // FUNCTION\n  // --- API\n  async function getDataFromAPI(lat, long) {\n    setIsLoading(true);\n\n    const response = await axios\n      .get(`/forecast/c21bbb47d7ddd92cb3412075a8148b07/${lat},${long}`, {\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n        },\n      })\n      .catch((error) => {\n        console.log(error);\n        setHasError(error.response.data.error);\n      });\n\n    if (response) {\n      let mutateData = {\n        time: convertTimestampToDate(response.data.currently.time, \"full\"),\n        icon: response.data.currently.icon.toUpperCase().split(\"-\").join(\"_\"),\n        summary: response.data.currently.summary,\n        temperature: response.data.currently.temperature.toFixed(0),\n        dewPoint: response.data.currently.dewPoint,\n        humidity: response.data.currently.humidity,\n        windSpeed: response.data.currently.windSpeed,\n        daily: response.data.daily.data.map((thing) => {\n          return (thing = {\n            day: convertTimestampToDate(thing.time, \"day\"),\n            icon: thing.icon.toUpperCase().split(\"-\").join(\"_\"),\n            temperatureMax: thing.temperatureMax.toFixed(0),\n            temperatureMin: thing.temperatureMin.toFixed(0),\n          });\n        }),\n      };\n\n      setResultData(mutateData);\n      setIsLoading(false);\n    } else {\n      setResultData(\"\");\n      setIsLoading(false);\n    }\n  }\n  // --- Select Location\n  async function selectLocation(locate) {\n    setSelectedLocation(locate);\n    await getDataFromAPI(locate.lat, locate.long);\n  }\n  // --- Searchbar\n  function openSearchbar() {\n    setIsSearchShowing(true);\n  }\n  function closeSearchbar() {\n    setSearchInput({\n      lat: \"\",\n      long: \"\",\n    });\n    setIsSearchShowing(false);\n  }\n  function handleInput(evt) {\n    const name = evt.target.name;\n    const newValue =\n      evt.target.value !== \"\" ? parseFloat(evt.target.value) : \"\";\n\n    setSearchInput({ [name]: newValue });\n  }\n  function handleSearch() {\n    if (searchInput.lat !== \"\" && searchInput.long !== \"\") {\n      const locate = {\n        id: \"\",\n        name: \"Timezone\",\n        lat: searchInput.lat,\n        long: searchInput.long,\n      };\n\n      selectLocation(locate);\n      closeSearchbar();\n    } else {\n      alert(\"Please, fill search input.\");\n    }\n  }\n  // --- Utility Function\n  function convertTimestampToDate(timestamp, mode) {\n    const dayNames = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ];\n\n    const monthNames = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n\n    const date = new Date(timestamp * 1000);\n    const dateString = `${dayNames[date.getDay()]}, ${date.getDate()} ${\n      monthNames[date.getMonth()]\n    } ${date.getFullYear()}. ${date.toLocaleString().split(\" \")[1]} ${\n      date.toLocaleString().split(\" \")[2]\n    }.`;\n\n    if (mode === \"full\") {\n      return dateString;\n    } else if (mode === \"day\") {\n      return dayNames[date.getDay()];\n    }\n  }\n\n  // CONDITION REDERING\n  // --- NAV : Popular City\n  let navList = popularList.map((locate, index) => {\n    return (\n      <li\n        className=\"pop--list\"\n        key={index}\n        onClick={() => selectLocation(locate)}\n      >\n        {locate.name}\n      </li>\n    );\n  });\n  // --- NAV : Search Bar\n  let SearchBar;\n  if (isSearchShowing) {\n    SearchBar = (\n      <div className=\"wrapper\">\n        <div className=\"search__form\">\n          <label>\n            <strong>Find Location</strong> &nbsp; &nbsp;\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"8\"\n              height=\"8\"\n              viewBox=\"0 0 512 512\"\n            >\n              <title>ionicons-v5-b</title>\n              <polygon points=\"144 448 368 256 144 64 144 448\" />\n            </svg>\n            &nbsp; &nbsp;\n          </label>\n          <input\n            type=\"number\"\n            className=\"search__inpt--lat\"\n            id=\"latitude\"\n            placeholder=\"Latitue\"\n            name=\"lat\"\n            value={searchInput.lat}\n            onChange={handleInput}\n          />\n          <label> , </label>\n          <input\n            type=\"number\"\n            className=\"search__inpt--long\"\n            id=\"longtitude\"\n            placeholder=\"Longtitue\"\n            name=\"long\"\n            value={searchInput.long}\n            onChange={handleInput}\n          />\n          <button className=\"search__btn--find\" onClick={() => handleSearch()}>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"20\"\n              height=\"20\"\n              viewBox=\"0 0 512 512\"\n            >\n              <path\n                d=\"M221.09,64A157.09,157.09,0,1,0,378.18,221.09,157.1,157.1,0,0,0,221.09,64Z\"\n                style={{\n                  fill: \"none\",\n                  stroke: \"#000\",\n                  strokeMiterlimit: \"10\",\n                  strokeWidth: \"32px\",\n                }}\n              />\n              <line\n                x1=\"338.29\"\n                y1=\"338.29\"\n                x2=\"448\"\n                y2=\"448\"\n                style={{\n                  fill: \"none\",\n                  stroke: \"#000\",\n                  strokeLinecap: \"round\",\n                  strokeMiterlimit: \"10\",\n                  strokeWidth: \"32px\",\n                }}\n              />\n            </svg>\n          </button>\n          <button className=\"search__btn--close\" onClick={closeSearchbar}>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"20\"\n              height=\"20\"\n              viewBox=\"0 0 512 512\"\n            >\n              <line\n                x1=\"368\"\n                y1=\"368\"\n                x2=\"144\"\n                y2=\"144\"\n                style={{\n                  fill: \"none\",\n                  stroke: \"#000\",\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: \"32px\",\n                }}\n              />\n              <line\n                x1=\"368\"\n                y1=\"144\"\n                x2=\"144\"\n                y2=\"368\"\n                style={{\n                  fill: \"none\",\n                  stroke: \"#000\",\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: \"32px\",\n                }}\n              />\n            </svg>\n          </button>\n        </div>\n      </div>\n    );\n  }\n  // --- Daily List\n  let dailyList;\n  if (resultData.daily !== undefined) {\n    dailyList = resultData.daily.map((thing, index) => {\n      return (\n        <div className=\"daily--list\" key={index}>\n          <div className=\"list--day\">{thing.day}</div>\n          <div className=\"list--icon\">\n            <Skycons\n              color=\"white\"\n              type={thing.icon}\n              animate={true}\n              size={50}\n              resizeClear={true}\n            />\n          </div>\n          <div className=\"list--temperature\">\n            {thing.temperatureMax} °F | {thing.temperatureMin} °F\n          </div>\n        </div>\n      );\n    });\n  }\n  // --- MAIN CONTENT\n  let ContentRender;\n  if (!isLoading && resultData !== \"\") {\n    ContentRender = (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <div className=\"result\">\n          <div className=\"result__inside\">\n            <div className=\"result--time\">\n              Current Date &nbsp;\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"8\"\n                height=\"8\"\n                viewBox=\"0 0 512 512\"\n                fill=\"currentColor\"\n              >\n                <polygon points=\"144 448 368 256 144 64 144 448\" />\n              </svg>{\" \"}\n              &nbsp;\n              <span className=\"current--time\">{resultData.time}</span>\n            </div>\n\n            <div className=\"result__currently\">\n              <div className=\"current--icon\">\n                <Skycons\n                  color=\"white\"\n                  type={resultData.icon}\n                  animate={true}\n                  size={100}\n                  resizeClear={true}\n                />\n              </div>\n\n              <div className=\"current--temp\">\n                <div className=\"temp--sum\">{resultData.summary}</div>\n                <span className=\"temp--num\">{resultData.temperature}</span>\n                <span>\n                  <div className=\"btn--degree\">°F</div>\n                </span>\n              </div>\n\n              <div className=\"current--info\">\n                <ul>\n                  <li className=\"info--dew\">\n                    Dew Point : {resultData.dewPoint}\n                  </li>\n                  <li className=\"info--humi\">\n                    Humidity : {resultData.humidity}%\n                  </li>\n                  <li className=\"info--wind\">\n                    Wind Speed : {resultData.windSpeed} / hour\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"daily\">\n          <div className=\"daily__inside\">\n            {/* List */}\n            {dailyList}\n          </div>\n        </div>\n      </div>\n    );\n  } else if (!isLoading && resultData === \"\") {\n    ContentRender = (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          color: \"#ffffff\",\n          fontSize: \"3rem\",\n        }}\n      >\n        <p>{hasError !== \"\" ? hasError : \"Please, select some place..\"}</p>\n      </div>\n    );\n  } else if (isLoading) {\n    ContentRender = (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <img\n          src={process.env.PUBLIC_URL + \"/assets/img/svg/loading.svg\"}\n          alt=\"loading\"\n          width=\"50\"\n        />\n      </div>\n    );\n  }\n\n  // LIFECYCLE\n  useEffect(() => {\n    // console.log(\"DATA CHANING...\");\n  }, [resultData]);\n\n  return (\n    <div className=\"App\">\n      <section className=\"weather-report\">\n        <div className=\"container\">\n          <header className=\"header\">\n            <ul className=\"search__pop\">\n              <strong>\n                Popular &nbsp;\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"8\"\n                  height=\"8\"\n                  viewBox=\"0 0 512 512\"\n                  fill=\"currentColor\"\n                >\n                  <polygon points=\"144 448 368 256 144 64 144 448\" />\n                </svg>\n              </strong>\n              {navList}\n              <li>\n                <div className=\"search__btn\" onClick={openSearchbar}>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"20\"\n                    height=\"20\"\n                    viewBox=\"0 0 512 512\"\n                  >\n                    <path\n                      d=\"M221.09,64A157.09,157.09,0,1,0,378.18,221.09,157.1,157.1,0,0,0,221.09,64Z\"\n                      style={{\n                        fill: \"none\",\n                        stroke: \"#000\",\n                        strokeMiterlimit: \"10\",\n                        strokeWidth: \"32px\",\n                      }}\n                    />\n                    <line\n                      x1=\"338.29\"\n                      y1=\"338.29\"\n                      x2=\"448\"\n                      y2=\"448\"\n                      style={{\n                        fill: \"none\",\n                        stroke: \"#000\",\n                        strokeLinecap: \"round\",\n                        strokeMiterlimit: \"10\",\n                        strokeWidth: \"32px\",\n                      }}\n                    />\n                  </svg>\n                </div>\n              </li>\n            </ul>\n\n            {SearchBar}\n          </header>\n\n          <aside className=\"aside\">\n            <div\n              className=\"aside__inside\"\n              style={{\n                backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.45), rgba(0, 0, 0, 0.45)), url(${`/assets/img/jpg/${\n                  selectedLocation.id !== \"\" ? selectedLocation.id : \"default\"\n                }.jpg`})`,\n                backgroundPosition: \"center\",\n                backgroundSize: \"cover\",\n                backgroundRepeat: \"no-repeat\",\n              }}\n            >\n              <div className=\"aside--timezone\">\n                {selectedLocation.name !== \"\"\n                  ? selectedLocation.name\n                  : \"Location\"}\n              </div>\n              <div className=\"aside--latitude\">\n                Latitude :{\" \"}\n                {selectedLocation.lat !== \"\"\n                  ? selectedLocation.lat\n                  : \"----------------\"}\n              </div>\n              <div className=\"aside--longtitude\">\n                Longtitue :{\" \"}\n                {selectedLocation.long !== \"\"\n                  ? selectedLocation.long\n                  : \"----------------\"}\n              </div>\n            </div>\n          </aside>\n\n          {ContentRender}\n        </div>\n        <div className=\"copyright\">\n          <p>\n            {\" \"}\n            This is API from &nbsp;\n            <a\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              href=\"https://darksky.net/dev\"\n              alt=\"DarkSky API\"\n            >\n              <strong>DarkSky.net</strong>\n            </a>{\" \"}\n            |{\" \"}\n            <span>\n              Created By{\" \"}\n              <a\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n                href=\"https://github.com/iamrams1992\"\n              >\n                <strong>RAMS</strong>\n              </a>\n            </span>\n          </p>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default App;\n","// Library\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n// Style\nimport './index.css';\n// Main\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}